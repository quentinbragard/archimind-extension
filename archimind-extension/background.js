chrome.runtime.onInstalled.addListener(()=>{chrome.tabs.create({url:"welcome.html"})});chrome.runtime.onMessage.addListener((e,s,o)=>{const t={googleSignIn:()=>d(o),emailSignIn:()=>g(e.email,e.password,o),signUp:()=>f(e.email,e.password,e.name,o),getAuthToken:()=>p(o),refreshAuthToken:()=>h(o),getUserLocale:()=>{const r=chrome.i18n.getUILanguage();return o({success:!0,locale:r}),!1},"start-network-monitoring":()=>(console.log("🔍 Starting network monitoring (simplified version)..."),o({success:!0}),!1),"stop-network-monitoring":()=>(console.log("🔍 Stopping network monitoring (simplified version)..."),o({success:!0}),!1),"network-request-captured":()=>{var r;return(r=s.tab)!=null&&r.id&&chrome.tabs.sendMessage(s.tab.id,{action:"network-request-captured",data:e.data}),o({success:!0}),!1}};return t[e.action]?typeof t[e.action]=="function"?t[e.action]():!0:(o({success:!1,error:"Invalid action"}),!1)});async function g(e,s,o){try{console.log("🔑 Attempting email sign-in for:",e);const t=await fetch("https://api-prod-sw5cmqbraq-od.a.run.app//auth/sign_in",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:e,password:s})}),r=await t.json();if(!t.ok){console.error("❌ Email Sign-In failed:",r),o({success:!1,error:r.detail||"Invalid email or password"});return}if(!r.session||!r.session.access_token||!r.session.refresh_token){console.error("❌ Invalid response from sign-in endpoint (missing session data):",r),o({success:!1,error:"Server returned invalid authentication data"});return}console.log("✅ Email Sign-In successful"),i(r.session),r.user?c(r.user):console.warn("⚠️ No user data returned from sign-in endpoint"),o({success:!0,user:r.user,access_token:r.session.access_token})}catch(t){console.error("❌ Error in email sign-in:",t),o({success:!1,error:t.message||"Unable to connect to authentication service"})}return!0}function f(e,s,o,t){return console.log("📝 Attempting sign-up for:",e),fetch("https://api-prod-sw5cmqbraq-od.a.run.app//auth/sign_up",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:e,password:s,name:o})}).then(r=>{const a=r.headers.get("content-type");if(!a||!a.includes("application/json"))throw new Error("Server returned non-JSON response");return r.json()}).then(r=>{if(!r.success)throw new Error(r.detail||r.error||"Sign-up failed");console.log("✅ Signup successful"),r.user&&c(r.user),r.session&&r.session.access_token&&r.session.refresh_token&&i(r.session),chrome.tabs.create({url:"https://chat.openai.com"}),t({success:!0,user:r.user})}).catch(r=>{console.error("❌ Error in signup:",r),t({success:!1,error:r.message||"Failed to create account"})}),!0}function d(e){console.log("🔍 Starting Google sign-in flow");const s=chrome.runtime.getManifest(),o=new URL("https://accounts.google.com/o/oauth2/auth");return o.searchParams.set("client_id",s.oauth2.client_id),o.searchParams.set("response_type","id_token"),o.searchParams.set("redirect_uri",`https://${chrome.runtime.id}.chromiumapp.org`),o.searchParams.set("scope",s.oauth2.scopes.join(" ")),chrome.identity.launchWebAuthFlow({url:o.href,interactive:!0},async t=>{if(chrome.runtime.lastError){console.error("❌ Google Sign-In failed:",chrome.runtime.lastError),e({success:!1,error:chrome.runtime.lastError.message||chrome.i18n.getMessage("googleAuthCanceled",void 0,"Google authentication was canceled")});return}if(!t){console.error("❌ No redirect URL received"),e({success:!1,error:chrome.i18n.getMessage("noAuthData",void 0,"No authentication data received from Google")});return}try{const r=new URL(t),l=new URLSearchParams(r.hash.replace("#","?")).get("id_token");if(!l){console.error("❌ No ID token in redirect URL"),e({success:!1,error:"Google authentication didn't return an ID token"});return}console.log("🔹 Google ID Token received");const u=await fetch("https://api-prod-sw5cmqbraq-od.a.run.app//auth/google",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id_token:l})}),n=await u.json();if(!u.ok){console.error("❌ Backend authentication failed:",n),e({success:!1,error:n.detail||n.error||"Backend authentication failed"});return}if(!n.session||!n.session.access_token||!n.session.refresh_token){console.error("❌ Invalid response from Google auth endpoint (missing session data):",n),e({success:!1,error:"Server returned invalid authentication data"});return}console.log("✅ Google authentication successful"),i(n.session),n.user&&(c(n.user),m(n.user.id)),e({success:!0,user:n.user,access_token:n.session.access_token})}catch(r){console.error("❌ Error processing Google authentication:",r),e({success:!1,error:r.message||"Failed to process Google authentication"})}}),!0}function c(e){if(!e){console.error("❌ Attempted to store undefined/null user");return}chrome.storage.local.set({user:e},()=>{chrome.runtime.lastError?console.error("❌ Error storing user data:",chrome.runtime.lastError):console.log("✅ User data stored successfully:",e.id)})}function m(e){if(!e){console.error("❌ Attempted to store empty user ID");return}chrome.storage.local.set({userId:e},()=>{chrome.runtime.lastError?console.error("❌ Error storing user ID:",chrome.runtime.lastError):console.log("✅ User ID stored successfully:",e)})}function p(e){return chrome.storage.local.get(["access_token","refresh_token","token_expires_at","user"],s=>{const o=Math.floor(Date.now()/1e3);if(console.log("🔄 Current time:",o),console.log("🔄 Token expires at:",s.token_expires_at),s.access_token&&s.token_expires_at&&s.token_expires_at>o){console.log("✅ Using valid auth token"),e({success:!0,token:s.access_token});return}if(s.refresh_token){console.log("⚠️ Token expired. Attempting refresh..."),h(e);return}if(s.user&&s.user.id){console.log("⚠️ No valid tokens, but user data exists. Redirecting to silent sign-in..."),e({success:!1,error:"Session expired",errorCode:"SESSION_EXPIRED",needsReauth:!0});return}console.error("❌ No authentication data found"),e({success:!1,error:"Not authenticated",errorCode:"NOT_AUTHENTICATED",needsReauth:!0})}),!0}function h(e){return chrome.storage.local.get(["refresh_token","user"],async s=>{if(!s.refresh_token){console.error("❌ No refresh token available"),s.user&&s.user.id?e({success:!1,error:chrome.i18n.getMessage("sessionExpired",void 0,"Session expired. Please sign in again."),errorCode:"REFRESH_TOKEN_MISSING",needsReauth:!0}):e({success:!1,error:chrome.i18n.getMessage("notAuthenticated",void 0,"Not authenticated. Please sign in."),errorCode:"NOT_AUTHENTICATED",needsReauth:!0});return}try{console.log("🔄 Attempting to refresh token...");const o=await fetch("https://api-prod-sw5cmqbraq-od.a.run.app//auth/refresh_token",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({refresh_token:s.refresh_token})});if(!o.ok){console.error("❌ Token refresh failed:",await o.text()),o.status===401||o.status===403?(chrome.storage.local.remove(["access_token","refresh_token","token_expires_at"]),e({success:!1,error:chrome.i18n.getMessage("sessionExpired",void 0,"Session expired. Please sign in again."),errorCode:"INVALID_REFRESH_TOKEN",needsReauth:!0})):e({success:!1,error:chrome.i18n.getMessage("refreshFailed",void 0,"Failed to refresh token. Please try again."),errorCode:"REFRESH_FAILED"});return}const t=await o.json();if(console.log("🔄 Token refreshed successfully"),!t.session||!t.session.access_token){console.error("❌ Invalid response from refresh endpoint:",t),e({success:!1,error:"Invalid response from server",errorCode:"INVALID_RESPONSE"});return}i(t.session),e({success:!0,token:t.session.access_token})}catch(o){console.error("❌ Error refreshing access token:",o),e({success:!1,error:chrome.i18n.getMessage("networkError",void 0,"Network error while refreshing token"),errorCode:"NETWORK_ERROR"})}}),!0}function i(e){if(!e){console.error("❌ Attempted to store undefined/null session");return}if(!e.access_token||!e.refresh_token){console.error("❌ Incomplete session data:",e);return}console.log("🔄 Storing auth session. Expires at:",e.expires_at),chrome.storage.local.set({access_token:e.access_token,refresh_token:e.refresh_token,token_expires_at:e.expires_at},()=>{chrome.runtime.lastError?console.error("❌ Error storing auth session:",chrome.runtime.lastError):console.log("✅ Auth session stored successfully")})}chrome.storage.onChanged.addListener((e,s)=>{s==="local"&&e.devReloadTimestamp&&chrome.runtime.reload()});
